{"version":3,"sources":["services/storage/local_storage.js","variables/variables.js","services/api/login_api.js","components/pages/login/LoginScreen.js","media/capture.js","media/media_constraints.js","components/primitives/CheckboxField.js","components/primitives/RadioBtns.js","components/constraints/Constraints.js","media/record.js","services/api/security.js","services/api/records_api.js","utils/download.js","components/controlPanel/ControlPanel.js","components/filesPanel/FileList.js","components/video/Video.js","components/video/VideoPanel.js","utils/wait.js","components/pages/recording/RecordingScreen.js","components/App.js","serviceWorker.js","index.js"],"names":["addToStorage","key","value","toString","window","localStorage","setItem","getFromStorage","getItem","removeFromStorage","removeItem","KEYS","SERVER_URL","location","origin","loginValue","a","fetch","method","response","text","token","console","log","React","Component","getMediaStream","recordOptions","captureStream","navigator","mediaDevices","getDisplayMedia","exportDiaplaMediaConstraints","grabMic","getUserMedia","video","audio","mic","addTrack","getAudioTracks","error","VIDEO_SIZES","AUTO","width","height","label","SMALL","MEDIUM","CUSTOM","MediaConstraints","this","size","_size","_audio","channels","autoGainControl","echoCancellation","_echoCancellation","noiseSuppression","_noiseSuppression","_grabMic","newSize","newAudio","CheckboxField","props","isChecked","Form","Checkbox","checked","onChange","RadioBtns","currValue","values","labelField","Object","keys","map","textValue","Field","control","Radio","getRadioButtonsGroup","Constraints","onFieldChange","newC","merge","assign","constraints","onConstraintsChange","Group","inline","Input","e","target","type","required","getCustomSizeInputs","Recorder","stream","_stream","_rec","MediaRecorder","_data","ondataavailable","push","data","start","stopped","Promise","r","onstop","onerror","stop","getTracks","forEach","track","then","Blob","secured","init","headers","storageManager","json","responseData","formData","FormData","append","body","responseText","url","name","link","document","createElement","download","href","click","ControlPanel","uploadingOn","setState","state","uploading","uploadingOff","upload","recordApi","File","currentRecord","filename","onNewFileUpload","finally","handleFilenameChange","isRecording","currentRecordUrl","startRecording","stopRecording","Button","onClick","disabled","icon","id","Or","process","loading","Video","videoElem","createRef","nextProps","nextState","nextContext","isEqual","videoSourceProps","recordUrl","lastRec","record","current","srcObject","src","URL","createObjectURL","mediaStream","prevProps","prevState","playerProps","play","pause","muted","currentTime","videoTrack","getVideoTracks","debug","JSON","stringify","getSettings","getConstraints","audioTrack","debugTrackSetup","loop","ref","title","VideoPanel","preventDefault","toggleMuted","placeholder","noVideo","Header","Icon","color","Statistic","Value","find","v","Segment","getPlaceholder","wait","ms","resolve","setTimeout","RecordingScreen","loadFileList","files","recorder","filesCopy","concat","length","countdown","onHitPlay","file","videoPlaceHolder","Container","Grid","divided","stretched","Row","columns","Column","App","isLoggedIn","loginSuccess","onLoginUpdate","bind","bannerColor","Boolean","hostname","match","require","config","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.762175fc.chunk.js","sourcesContent":["\nexport default {\n  addToStorage,\n  getFromStorage,\n  removeFromStorage\n};\n\nexport const KEYS = {\n  LOGIN_TOKEN: \"LOGIN_TOKEN\"\n};\n\nfunction addToStorage(key, value) {\n  value = value.toString();\n  window.localStorage.setItem(key, value);\n}\n\nfunction getFromStorage(key) {\n  return window.localStorage.getItem(key);\n}\n\nfunction removeFromStorage(key) {\n  return window.localStorage.removeItem(key);\n}\n","const SUB_PATH = \"/records-manager\";\nexport const SERVER_URL = process.env.NODE_ENV === 'production' ? window.location.origin + SUB_PATH : 'http://localhost:8080';\nexport const UI_ONLY = process.env.REACT_APP_UI_ONLY;\n","import {SERVER_URL} from \"../../variables/variables\";\n\nexport async function login(loginValue) {\n  const response = await fetch(SERVER_URL + \"/login/\" + loginValue, {\n    method: 'POST'\n  })\n\n  let token = await response.text();\n  console.log(token);\n  return token;\n}\n","import React from 'react';\n\nimport {login} from \"../../../services/api/login_api\";\nimport storageManager, {KEYS} from \"../../../services/storage/local_storage\";\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginValue: undefined\n    }\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState(Object.assign({}, {loginValue: e.target.value}));\n  }\n\n  submit(e) {\n    e.preventDefault();\n    login(this.state.loginValue)\n      .then(value => storageManager.addToStorage(KEYS.LOGIN_TOKEN, value))\n      .then(this.props.onLoginUpdate);\n  }\n\n  render() {\n    return (\n      <div>\n        Welcome, please log in to continue:\n        <div>\n          <input type=\"text\" onChange={this.handleLoginChange}/>\n          <button onClick={this.submit} disabled={!this.state.loginValue}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginScreen;\n","/**\n * @param {MediaConstraints} recordOptions\n * */\nexport async function getMediaStream(recordOptions) {\n    let captureStream = null;\n\n    try {\n        captureStream = await navigator.mediaDevices.getDisplayMedia(recordOptions.exportDiaplaMediaConstraints());\n        if (recordOptions.grabMic) {\n            const mic = await navigator.mediaDevices.getUserMedia({video: false, audio: true});\n            captureStream.addTrack(mic.getAudioTracks()[0]);\n        }\n    } catch(err) {\n        console.error(\"Error: \" + err);\n    }\n    return captureStream;\n}\n\nexport function debugTrackSetup(video) {\n    if (video.srcObject) {\n        const videoTrack = video.srcObject.getVideoTracks()[0];\n\n        console.debug(\"Track settings:\");\n        console.debug(JSON.stringify(videoTrack.getSettings(), null, 2));\n        console.debug(\"Track constraints:\");\n        console.debug(JSON.stringify(videoTrack.getConstraints(), null, 2));\n\n        const audioTrack = video.srcObject.getAudioTracks()[0];\n        if(audioTrack) {\n            console.debug(\"Track settings:\");\n            console.debug(JSON.stringify(audioTrack.getSettings(), null, 2));\n            console.debug(\"Track constraints:\");\n            console.debug(JSON.stringify(audioTrack.getConstraints(), null, 2));\n        }\n    }\n}\n","export const VIDEO_SIZES = {\n    AUTO: {width: 0, height: 0, label: \"Auto\"},\n    SMALL: {width: 640, height: 480, label: \"640x480\"},\n    MEDIUM: {width: 1280, height: 720, label: \"1280x720\"},\n    CUSTOM: {width: 0, height: 0, label: \"Custom\"}\n}\n\nexport class MediaConstraints {\n    constructor() {\n        this.size = VIDEO_SIZES.AUTO;\n    }\n\n    exportDiaplaMediaConstraints() {\n        return {\n            video: this._size === VIDEO_SIZES.AUTO ? true : {\n                width: this._size.width,\n                height: this._size.height\n            },\n            audio: this._audio && {\n                channels: 2,\n                autoGainControl: false,\n                echoCancellation: this._echoCancellation,\n                noiseSuppression: this._noiseSuppression,\n            },\n            grabMic: this._grabMic\n        }\n    }\n\n    get size() {\n        return this._size;\n    }\n\n    set size(newSize) {\n        this._size = newSize;\n    }\n\n    set height(height) {\n        this._size.height = height;\n    }\n\n    set width(width) {\n        this._size.width = width;\n    }\n\n    get audio() {\n        return this._audio;\n    }\n\n    set audio(newAudio) {\n        this._audio = newAudio;\n    }\n\n    get echoCancellation() {\n        return this._echoCancellation;\n    }\n\n    set echoCancellation(echoCancellation) {\n        this._echoCancellation = echoCancellation;\n    }\n\n    get noiseSuppression() {\n        return this._noiseSuppression;\n    }\n\n    set noiseSuppression(noiseSuppression) {\n        this._noiseSuppression = noiseSuppression;\n    }\n\n    get grabMic() {\n        return this._grabMic;\n    }\n\n    set grabMic(value) {\n        this._grabMic = value;\n    }\n}\n","import React from 'react';\nimport {Form} from 'semantic-ui-react'\n\n\nclass CheckboxField extends React.Component {\n\n    render() {\n        const {isChecked, label} = this.props;\n\n        return (\n          <Form.Checkbox label={label} checked={!!isChecked} onChange={() => this.props.onChange(!isChecked)}/>\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport {Form, Radio} from 'semantic-ui-react'\n\n\nclass RadioBtns extends React.Component {\n\n  getRadioButtonsGroup(currValue, values, labelField, onChange) {\n    return Object.keys(values).map((key) => {\n      const value = values[key];\n      let textValue = value[labelField];\n\n      return <Form.Field\n        control={Radio}\n        key={textValue + \"_radio\"}\n        onChange={() => onChange(value)}\n        value={textValue}\n        checked={currValue === value}\n        label={textValue}/>\n    });\n  }\n\n  render() {\n    const {value, values, labelField, onChange} = this.props;\n\n    return this.getRadioButtonsGroup(value, values, labelField, onChange);\n  }\n}\n\nexport default RadioBtns;\n","import React from 'react';\nimport {MediaConstraints, VIDEO_SIZES} from \"../../media/media_constraints\";\nimport CheckboxField from \"../primitives/CheckboxField\";\nimport RadioBtns from \"../primitives/RadioBtns\";\nimport {Form} from \"semantic-ui-react\";\n\n\nclass Constraints extends React.Component {\n\n  onFieldChange = (newC) => {\n    const merge = Object.assign(new MediaConstraints(), this.props.constraints, newC);\n    this.props.onConstraintsChange(Object.assign({}, {constraints: merge}));\n  }\n\n  getCustomSizeInputs(constraints) {\n    return <Form.Group inline>\n      <Form.Input onChange={(e) => this.onFieldChange({width: +e.target.value})}\n                  value={constraints.size.width}\n                  type=\"number\"\n                  label={\"Width\"}\n                  required={true}/>\n      <Form.Input onChange={(e) => this.onFieldChange({height: +e.target.value})}\n                  value={constraints.size.height}\n                  type=\"number\"\n                  label={\"Height\"}\n                  required={true}/>\n    </Form.Group>;\n  }\n\n  render() {\n    const {constraints} = this.props;\n\n    return (\n      <Form>\n        <Form.Group inline>\n          <RadioBtns onChange={(value) => this.onFieldChange({size: value})} value={constraints.size}\n                     values={VIDEO_SIZES} labelField={\"label\"}/>\n          {constraints.size === VIDEO_SIZES.CUSTOM && this.getCustomSizeInputs(constraints)}\n        </Form.Group>\n        <Form.Group inline>\n          <CheckboxField onChange={(value) => this.onFieldChange({grabMic: value})} isChecked={constraints.grabMic}\n                         label={\"Grab mic\"}/>\n          <CheckboxField onChange={(value) => this.onFieldChange({audio: value})} isChecked={constraints.audio}\n                         label={\"Grab audio\"}/>\n          {constraints.audio && <CheckboxField onChange={(value) => this.onFieldChange({noiseSuppression: value})}\n                                               isChecked={constraints.noiseSuppression} label={\"Noise Suppression\"}/>}\n          {constraints.audio && <CheckboxField onChange={(value) => this.onFieldChange({echoCancellation: value})}\n                                               isChecked={constraints.echoCancellation} label={\"Echo Cancellation\"}/>}\n        </Form.Group>\n      </Form>\n    )\n      ;\n  }\n\n}\n\nexport default Constraints;\n","export class Recorder {\n    _data;\n    _stream;\n\n    constructor(stream) {\n        this._stream = stream;\n    }\n\n    start() {\n        this._rec = new MediaRecorder(this._stream);\n        this._data = [];\n        this._rec.ondataavailable = e => {\n            this._data.push(e.data);\n        }\n        this._rec.start();\n    }\n\n    stop() {\n        const stopped = new Promise((r, e) => {\n            this._rec.onstop = r;\n            this._rec.onerror = e;\n        });\n        this._rec.stop();\n        this._stream.getTracks().forEach(track => track.stop());\n        return stopped.then(() => {\n            return new Blob(this._data, { type: \"video/webm\" });\n        });\n    }\n\n    get data() {\n        return this._data;\n    }\n\n}\n","import storageManager, {KEYS} from \"../storage/local_storage\";\n\nexport function secured(init) {\n  const headers = init.headers || {};\n  headers[\"jwt_token\"] = storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n  let assign = Object.assign(init, {headers});\n  return assign;\n}\n","import {secured} from \"./security\";\nimport {SERVER_URL} from \"../../variables/variables\";\n\nexport async function listFiles() {\n  const response = await fetch(SERVER_URL + \"/records\",\n    secured({'method': \"GET\"}));\n\n  const responseData = await response.json();\n  console.log(responseData);\n  return responseData;\n}\n\n\nexport async function uploadRecord(data) {\n  const formData = new FormData();\n  formData.append('file', data);\n\n\n  const response = await fetch(SERVER_URL + \"/records\",\n    secured({\n      method: 'post',\n      body: formData\n    }));\n\n  const responseText = await response.text();\n  console.log(responseText);\n  return responseText;\n}\n","\n\nexport default (url, name) => {\n  const link = document.createElement('a');\n  link.download = name;\n  link.href = url;\n  link.click();\n}\n","import React from 'react';\nimport {Button, Form} from \"semantic-ui-react\";\nimport * as recordApi from \"../../services/api/records_api\";\nimport download from \"../../utils/download\";\nimport {UI_ONLY} from \"../../variables/variables\";\n\nconst WEBM_EXT = \".webm\";\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {filename: \"my_recording_1\", uploading: false};\n  }\n\n  uploadingOn = async () => {\n    this.setState(Object.assign({}, this.state, {uploading: true}));\n  }\n  uploadingOff = async () => {\n    this.setState(Object.assign({}, this.state, {uploading: false}));\n  }\n\n  upload = () => {\n    this.uploadingOn().then(() => {\n      return recordApi.uploadRecord(new File([this.props.currentRecord], this.state.filename + WEBM_EXT))\n        .then(this.props.onNewFileUpload);\n    }).finally(this.uploadingOff);\n  }\n\n\n  handleFilenameChange = (e) => {\n    this.setState(Object.assign({}, this.state, {filename: e.target.value}));\n  }\n\n  render() {\n    const {isRecording, currentRecordUrl, startRecording, stopRecording} = this.props;\n    const {filename} = this.state;\n\n    return (\n      <Form.Group>\n        <Form.Button onClick={startRecording}>Record</Form.Button>\n        <Form.Button onClick={stopRecording} disabled={!isRecording}>Stop</Form.Button>\n        <div>\n          <Form.Input onChange={this.handleFilenameChange} value={filename} label={\"File name\"}\n                      required={true}/>\n          <Button.Group>\n            <Form.Button icon='download'\n                         id=\"downloadRecord\"\n                         onClick={() => download(currentRecordUrl, filename)}\n                         disabled={!currentRecordUrl || !filename}>Download</Form.Button>\n            <Button.Or text='or'/>\n            <Form.Button onClick={this.upload}\n                         target=\"_blank\"\n                         disabled={!currentRecordUrl || !filename || UI_ONLY}\n                         loading={this.state.uploading}>Upload\n            </Form.Button>\n          </Button.Group>\n        </div>\n      </Form.Group>\n    )\n      ;\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport {Table} from \"semantic-ui-react\";\nimport download from \"../../utils/download\";\nimport { Icon, Button } from 'semantic-ui-react'\n\nclass FileList extends React.Component {\n  getFileRows(files) {\n    return files.map(file => (<Table.Row key={file.name + \"_table_row\"}>\n      <Table.Cell key={file.name + \"_table_cell_name\"}>\n        {file.name}\n      </Table.Cell>\n      <Table.Cell key={file.name + \"_table_cell_button_download\"}>\n        <Button icon labelPosition='right' key={file.name + \"_table_cell_download_button\"} onClick={() => download(file.url, file.name)}>\n          Download\n            <Icon name='download' key={file.name + \"_table_cell_download_icon\"}/>\n        </Button>\n      </Table.Cell>\n        <Table.Cell key={file.name + \"_table_cell_button_play\"}>\n        <Button icon labelPosition='right' key={file.name + \"_table_cell_play_button\"} onClick={() => this.props.play(file)}>\n          Load\n            <Icon name='play' color='green' key={file.name + \"_table_cell_play_icon\"}/>\n        </Button>\n      </Table.Cell>\n    </Table.Row>));\n  }\n\n  getPlaceholder() {\n    return [{name: \"1\"}, {name: \"2\"}].map(file => (<Table.Row key={file.name + \"_table_row\"}>\n      <Table.Cell key={file.name + \"_table_cell_name\"}>\n      </Table.Cell>\n      <Table.Cell key={file.name + \"_table_cell_button_download\"}>\n      </Table.Cell>\n        <Table.Cell key={file.name + \"_table_cell_button_play\"}>\n      </Table.Cell>\n    </Table.Row>));\n  }\n\n  render() {\n    const {files} = this.props;\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Files</Table.HeaderCell>\n            <Table.HeaderCell/>\n            <Table.HeaderCell/>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {files.length ? this.getFileRows(files) : this.getPlaceholder()}\n        </Table.Body>\n      </Table>\n    )\n      ;\n  }\n}\n\nexport default FileList;\n","import React from 'react';\nimport isEqual from 'lodash.isequal';\nimport {debugTrackSetup} from \"../../media/capture\";\n\nclass Video extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoElem = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return !isEqual(nextProps, this.props);\n  }\n\n  componentDidMount() {\n    // TODO extract\n    const {recordUrl, lastRec, record} = this.props.videoSourceProps;\n\n    this.videoElem.current.srcObject = null;\n    this.videoElem.current.src = \"\";\n    if (recordUrl) {\n      this.videoElem.current.src = recordUrl;\n    } else if (lastRec) {\n      this.videoElem.current.src = window.URL.createObjectURL(record);\n    } else {\n      this.videoElem.current.srcObject = this.props.mediaStream;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.videoSourceProps, this.props.videoSourceProps)) {\n      const {recordUrl, lastRec, record} = this.props.videoSourceProps;\n\n      this.videoElem.current.srcObject = null;\n      this.videoElem.current.src = \"\";\n      if (recordUrl) {\n        this.videoElem.current.src = recordUrl;\n      } else if (lastRec) {\n        this.videoElem.current.src = window.URL.createObjectURL(record);\n      } else {\n        this.videoElem.current.srcObject = this.props.mediaStream;\n      }\n    }\n\n    if (!isEqual(prevProps.playerProps.videoSourceProps, this.props.playerProps)) {\n      const {play, pause, stop, muted} = this.props.playerProps;\n      if (play) {\n        this.videoElem.current.play();\n      }\n      if (pause) {\n        this.videoElem.current.pause();\n      }\n      if (stop) {\n        this.videoElem.current.pause();\n        this.videoElem.current.currentTime = 0;\n      }\n      this.videoElem.current.muted = muted;\n    }\n\n\n    debugTrackSetup(this.videoElem.current);\n  }\n\n  render() {\n    return (\n      <video id=\"video\"\n             loop\n             ref={this.videoElem}\n             title={\"main vid\"}/>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport {Button, Header, Icon, Segment, Statistic} from \"semantic-ui-react\";\nimport Video from \"./Video\";\n\n\nclass VideoPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {play: false, pause: false, stop: true, muted: false};\n  }\n\n  play = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: true, pause: false, stop: false}));\n  }\n  pause = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: false, pause: true, stop: false}));\n  }\n  stop = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: false, pause: false, stop: true}));\n  }\n  toggleMuted = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {muted: !this.state.muted}));\n  }\n\n  getPlaceholder(placeholder, noVideo) {\n    if (placeholder === \"Recording\") {\n      return <Header icon>\n        <Icon name='record' color='red'/>\n        Recording\n      </Header>;\n    } else if (placeholder > 0 && placeholder <= 3) {\n      return <Statistic>\n        <Statistic.Value>{placeholder}</Statistic.Value>\n      </Statistic>\n    }\n\n    if (noVideo) {\n      return <Header icon>\n        <Icon name='file video' color='grey'/>\n      </Header>\n    }\n  }\n\n  render() {\n    const {videoSourceProps, placeholder} = this.props;\n    const {play, pause, stop, muted} = this.state;\n    const noVideo = !Object.values(videoSourceProps).find(v => v !== null);\n    const video = <Video videoSourceProps={videoSourceProps} playerProps={Object.assign({}, this.state)}/>;\n    return (\n      <div>\n        <Segment placeholder>\n          {(noVideo || placeholder) && this.getPlaceholder(placeholder, noVideo)}\n          {!noVideo && !placeholder && video}\n        </Segment>\n        <Segment>\n          <Button icon onClick={this.play} disabled={noVideo || play}>\n            <Icon name='play' color='green'/>\n          </Button>\n          <Button icon onClick={this.pause} disabled={noVideo || pause || stop}>\n            <Icon name='pause' color='grey'/>\n          </Button>\n          <Button icon onClick={this.stop} disabled={noVideo || stop}>\n            <Icon name='stop' color='grey'/>\n          </Button>\n          <Button icon onClick={this.toggleMuted}>\n            {muted ? <Icon name='volume off' color='grey'/> : <Icon name='volume up' color='grey'/>}\n          </Button>\n        </Segment>\n      </div>\n    )\n      ;\n  }\n}\n\nexport default VideoPanel;\n","export const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n","import React from 'react';\nimport './RecordingScreen.css';\nimport {getMediaStream} from \"../../../media/capture\";\nimport Constraints from \"../../constraints/Constraints\";\nimport {MediaConstraints} from \"../../../media/media_constraints\";\nimport {Recorder} from \"../../../media/record\";\nimport * as recordApi from \"../../../services/api/records_api\";\nimport {Container, Form, Grid, Segment} from 'semantic-ui-react'\nimport FileList from \"../../filesPanel/FileList\";\nimport ControlPanel from \"../../controlPanel/ControlPanel\";\nimport VideoPanel from \"../../video/VideoPanel\";\nimport {wait} from \"../../../utils/wait\";\nimport {UI_ONLY} from \"../../../variables/variables\";\n\n\nclass RecordingScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaStream: null,\n      constraints: new MediaConstraints(),\n      recorder: null,\n      currentRecord: null,\n      currentRecordUrl: null,\n      files: [],\n      countdown: 0\n    };\n  }\n\n  componentDidMount() {\n    if(!UI_ONLY) this.loadFileList();\n  }\n\n  loadFileList = () => {\n    recordApi.listFiles()\n      .then((files) => {\n        this.setState(Object.assign({}, this.state, {files: files}));\n      });\n  }\n\n  stopRecording = () => {\n    if (this.state.recorder) {\n      this.state.recorder.stop().then(record => {\n        const currentRecordUrl = URL.createObjectURL(record);\n        const filesCopy = this.state.files.concat({name: \"video\" + this.state.files.length, url: currentRecordUrl});\n        this.setState(Object.assign({}, this.state, {\n          mediaStream: null,\n          recorder: null,\n          currentRecord: record,\n          currentRecordUrl: currentRecordUrl,\n          files: filesCopy\n        }));\n      });\n    }\n  }\n\n  countdown = async () => {\n    const SECOND = 1000;\n    return wait(1)\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 3})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 2})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 1})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 0})));\n  }\n\n  startRecording = async () => {\n    const mediaStream = await getMediaStream(this.state.constraints);\n    if (mediaStream) {\n      const recorder = new Recorder(mediaStream);\n      this.countdown().then(()=> {\n        recorder.start();\n        this.setState(Object.assign({}, this.state, {\n          mediaStream,\n          recorder: recorder,\n          currentRecord: null,\n          currentRecordUrl: null\n        }));\n      })\n    }\n  }\n\n  onHitPlay = (file) => {\n    this.setState({\n      mediaStream: null,\n      constraints: new MediaConstraints(),\n      recorder: null,\n      currentRecord: file,\n      currentRecordUrl: file.url,\n      files: this.state.files\n    });\n  }\n\n  onConstraintsChange = (constraints) => {\n    this.setState(Object.assign({}, this.state, constraints))\n  }\n\n  onNewFileUpload = () => {\n    this.loadFileList();\n  }\n\n\n  render() {\n    const {mediaStream, currentRecord, currentRecordUrl, constraints, files, countdown, recorder} = this.state;\n\n    let videoPlaceHolder;\n    if (countdown > 0) {\n      videoPlaceHolder = countdown;\n    } else if (recorder) {\n      videoPlaceHolder = \"Recording\";\n    }\n\n    return (\n      <Container>\n        <Segment>\n          <Grid divided='vertically' stretched={true}>\n            <Grid.Row columns={1}>\n              <Grid.Column width={UI_ONLY ? 0 : 9}>\n                <VideoPanel videoSourceProps={{mediaStream, record: currentRecord, recordUrl: currentRecordUrl}} placeholder={videoPlaceHolder}/>\n                <Segment>\n                  <Form>\n                    <Constraints onConstraintsChange={this.onConstraintsChange} constraints={constraints}/>\n                    <ControlPanel isRecording={!!mediaStream}\n                                  currentRecord={currentRecord}\n                                  currentRecordUrl={currentRecordUrl}\n                                  stopRecording={this.stopRecording}\n                                  startRecording={this.startRecording}\n                                  onNewFileUpload={this.onNewFileUpload}\n                    />\n                  </Form>\n                </Segment>\n              </Grid.Column>\n              {!UI_ONLY && <Grid.Column width={5}>\n                <FileList files={files} play={this.onHitPlay}/>\n              </Grid.Column>}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default RecordingScreen;\n","import React from 'react';\nimport './App.css';\nimport storageManager, {KEYS} from \"../services/storage/local_storage\";\nimport LoginScreen from \"./pages/login/LoginScreen\";\nimport RecordingScreen from \"./pages/recording/RecordingScreen\";\nimport {Container} from 'semantic-ui-react'\nimport {UI_ONLY} from \"../variables/variables\";\nimport GithubCorner from 'react-github-corner';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const isLoggedIn = !!storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n    this.state = {loginSuccess: isLoggedIn};\n\n    this.onLoginUpdate = this.onLoginUpdate.bind(this);\n  }\n\n  onLoginUpdate() {\n    let loginSuccess = !!storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n    this.setState(Object.assign({}, {loginSuccess}));\n  }\n\n\n  render() {\n    const isLoggedIn = this.state.loginSuccess;\n    return (\n      <Container>\n        <GithubCorner href=\"https://github.com/league55/RTC-screen-record\" bannerColor=\"#70B7FD\"/>\n        {isLoggedIn || UI_ONLY ? <RecordingScreen/> : <LoginScreen onLoginUpdate={this.onLoginUpdate}/>}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Video is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}